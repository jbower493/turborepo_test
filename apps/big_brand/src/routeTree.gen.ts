/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as MyServicesIndexImport } from './routes/my-services/index'
import { Route as InvoicesIndexImport } from './routes/invoices/index'
import { Route as MyServicesServiceIdIndexImport } from './routes/my-services/$serviceId/index'
import { Route as InvoicesViewInvoiceIdIndexImport } from './routes/invoices/view/$invoiceId/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MyServicesIndexRoute = MyServicesIndexImport.update({
  id: '/my-services/',
  path: '/my-services/',
  getParentRoute: () => rootRoute,
} as any)

const InvoicesIndexRoute = InvoicesIndexImport.update({
  id: '/invoices/',
  path: '/invoices/',
  getParentRoute: () => rootRoute,
} as any)

const MyServicesServiceIdIndexRoute = MyServicesServiceIdIndexImport.update({
  id: '/my-services/$serviceId/',
  path: '/my-services/$serviceId/',
  getParentRoute: () => rootRoute,
} as any)

const InvoicesViewInvoiceIdIndexRoute = InvoicesViewInvoiceIdIndexImport.update(
  {
    id: '/invoices/view/$invoiceId/',
    path: '/invoices/view/$invoiceId/',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/invoices/': {
      id: '/invoices/'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof InvoicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-services/': {
      id: '/my-services/'
      path: '/my-services'
      fullPath: '/my-services'
      preLoaderRoute: typeof MyServicesIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-services/$serviceId/': {
      id: '/my-services/$serviceId/'
      path: '/my-services/$serviceId'
      fullPath: '/my-services/$serviceId'
      preLoaderRoute: typeof MyServicesServiceIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/invoices/view/$invoiceId/': {
      id: '/invoices/view/$invoiceId/'
      path: '/invoices/view/$invoiceId'
      fullPath: '/invoices/view/$invoiceId'
      preLoaderRoute: typeof InvoicesViewInvoiceIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/invoices': typeof InvoicesIndexRoute
  '/my-services': typeof MyServicesIndexRoute
  '/my-services/$serviceId': typeof MyServicesServiceIdIndexRoute
  '/invoices/view/$invoiceId': typeof InvoicesViewInvoiceIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/invoices': typeof InvoicesIndexRoute
  '/my-services': typeof MyServicesIndexRoute
  '/my-services/$serviceId': typeof MyServicesServiceIdIndexRoute
  '/invoices/view/$invoiceId': typeof InvoicesViewInvoiceIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/invoices/': typeof InvoicesIndexRoute
  '/my-services/': typeof MyServicesIndexRoute
  '/my-services/$serviceId/': typeof MyServicesServiceIdIndexRoute
  '/invoices/view/$invoiceId/': typeof InvoicesViewInvoiceIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/invoices'
    | '/my-services'
    | '/my-services/$serviceId'
    | '/invoices/view/$invoiceId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/invoices'
    | '/my-services'
    | '/my-services/$serviceId'
    | '/invoices/view/$invoiceId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/invoices/'
    | '/my-services/'
    | '/my-services/$serviceId/'
    | '/invoices/view/$invoiceId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  InvoicesIndexRoute: typeof InvoicesIndexRoute
  MyServicesIndexRoute: typeof MyServicesIndexRoute
  MyServicesServiceIdIndexRoute: typeof MyServicesServiceIdIndexRoute
  InvoicesViewInvoiceIdIndexRoute: typeof InvoicesViewInvoiceIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  InvoicesIndexRoute: InvoicesIndexRoute,
  MyServicesIndexRoute: MyServicesIndexRoute,
  MyServicesServiceIdIndexRoute: MyServicesServiceIdIndexRoute,
  InvoicesViewInvoiceIdIndexRoute: InvoicesViewInvoiceIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/invoices/",
        "/my-services/",
        "/my-services/$serviceId/",
        "/invoices/view/$invoiceId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/invoices/": {
      "filePath": "invoices/index.tsx"
    },
    "/my-services/": {
      "filePath": "my-services/index.tsx"
    },
    "/my-services/$serviceId/": {
      "filePath": "my-services/$serviceId/index.tsx"
    },
    "/invoices/view/$invoiceId/": {
      "filePath": "invoices/view/$invoiceId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
